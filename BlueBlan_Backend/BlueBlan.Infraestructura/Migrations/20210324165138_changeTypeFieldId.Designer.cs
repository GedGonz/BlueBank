// <auto-generated />
using System;
using BlueBlan.Infraestructura.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlueBlan.Infraestructura.Migrations
{
    [DbContext(typeof(BlueBankContext))]
    [Migration("20210324165138_changeTypeFieldId")]
    partial class changeTypeFieldId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlueBlan.Dominio.Entity.Account", b =>
                {
                    b.Property<Guid>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Number")
                        .HasColumnType("VARCHAR(15)");

                    b.Property<int>("State")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("(1)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<decimal>("ValueInit")
                        .HasColumnType("DECIMAL(9,2)");

                    b.Property<decimal>("Valuecurrent")
                        .HasColumnType("DECIMAL(9,2)");

                    b.HasKey("AccountId");

                    b.HasIndex("ClientId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("BlueBlan.Dominio.Entity.AccountMove", b =>
                {
                    b.Property<Guid>("AccountMoveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateMove")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DateTime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("TypeMove")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AccountMoveId");

                    b.HasIndex("AccountId");

                    b.ToTable("AccountMoves");
                });

            modelBuilder.Entity("BlueBlan.Dominio.Entity.Client", b =>
                {
                    b.Property<Guid>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("LastName")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(30)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("BlueBlan.Dominio.Entity.Account", b =>
                {
                    b.HasOne("BlueBlan.Dominio.Entity.Client", "Client")
                        .WithMany("Accounts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("BlueBlan.Dominio.Entity.AccountMove", b =>
                {
                    b.HasOne("BlueBlan.Dominio.Entity.Account", "Account")
                        .WithMany("AccountMoves")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("BlueBlan.Dominio.Entity.Account", b =>
                {
                    b.Navigation("AccountMoves");
                });

            modelBuilder.Entity("BlueBlan.Dominio.Entity.Client", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
